rules:
- id: evalsPyJS
  patterns:
    - pattern-either:
      - pattern: eval(...)
      - pattern: exec(...)
      - pattern: execSync(...)
      - pattern: spawnSync(...)
  message: Remote code execution possible vulnerability. Please make sure function doesn't contain any user data
  languages: [python, js]
  severity: WARNING
  
- id: evalsPHP
  patterns:
    - pattern-either:
      - pattern: eval(...)
      - pattern: exec(...)
  message: Remote code execution possible vulnerability. Please make sure function doesn't contain any user data
  languages: [php]
  severity: WARNING
  
- id: concatenation-in-sh
  patterns:
    - pattern-either:
      - pattern: sh.$BIN($X + $Y)
      - pattern: sh.$BIN($X.format(...))
      - pattern: sh.$BIN(f"...{...}...")
  message: Concatenation in 'sh' call. It could lead to an injection.
  languages: [python]
  severity: ERROR
  
- id: os-module
  patterns:
    - pattern-either:
      - pattern: os.system(...)
      - pattern: os.spawnve(...)
      - pattern: os.spawnlpe(...)
      - pattern: os.spawnl(...)
      - pattern: os.spawnle(...)
      - pattern: os.spawnlp(...)
      - pattern: os.spawnv(...)
      - pattern: os.spawnvp(...)
      - pattern: os.spawnvpe(...)
      - pattern: os.posix_spawn(...)
      - pattern: os.posix_spawnp(...)
      - pattern: os.execl(...)
      - pattern: os.execle(...)
      - pattern: os.execlp(...)
      - pattern: os.execlpe(...)
      - pattern: os.execve(...)
      - pattern: os.execv(...)
      - pattern: os.execvp(...)
      - pattern: os.execvpe(...)
  message: os.$FUNC call detected. If the call data can be controlled by a malefactor, it may lead to command injection.
  languages: [python]
  severity: WARNING
  
- id: subproccess
  patterns:
    - pattern: subprocess.$FUNC(...)
  message: subprocess function detected. If the call data can be controlled by a malefactor, it may lead to command injection.
  languages: [python]
  severity: WARNING
  
- id: SQL-concatenation
  patterns:
    - pattern-either:
      - pattern: $DATABASE.sequelize.query(...)
  message: User input concatenated with raw SQL query can result in SQL Injection.
  languages: [python, js]
  severity: WARNING
  
- id: query-set-extra
  message: QuerySet.extra is not safe against SQL injection and requires very careful use.
  languages:
    - python
  severity: WARNING
  patterns:
    - pattern: $MODEL.extra(...)
    - pattern-not-inside: '$MODEL.extra(select = {$KEY: "..."})'
- id: sqlalchemy-text
  patterns:
    - pattern: sqlalchemy.text(...)
    - pattern-not-inside: sqlalchemy.text("...")
  message: sqlalchemy.text may lead to SQL injection. Try to avoid this function.
  languages:
    - python
  severity: ERROR
- id: tainted-sql-str-Django
  severity: ERROR
  message: Detected user input used to construct a SQL string. It may lead to a SQL injection.
  languages:
    - python
  mode: taint
  pattern-sources:
    - patterns:
        - pattern: request.$ANYTHING
        - pattern-not: request.build_absolute_uri
  pattern-sinks:
    - patterns:
        - pattern-either:
            - pattern: |
                "$SQLSTR" + ...
            - pattern: |
                f"$SQLSTR{...}..."
            - pattern: |
                "$SQLSTR".format(...)
        - metavariable-regex:
            metavariable: $SQLSTR
            regex: \s*(?i)(select|delete|insert|create|update|alter|drop)\b.*

- id: tainted-sql-str-flask
  severity: ERROR
  message: Detected user input used to construct a SQL string. It may lead to a SQL injection.
  languages:
    - python
  mode: taint
  pattern-sources:
    - patterns:
        - pattern-either:
            - pattern: flask.request.$ANYTHING
            - patterns:
                - pattern-inside: |
                    @$APP.route(...)
                    def $FUNC(..., $ROUTEVAR, ...):
                      ...
                - pattern: $ROUTEVAR
  pattern-sinks:
    - patterns:
        - pattern-either:
            - pattern: |
                "$SQLSTR" + ...
            - pattern: |
                f"$SQLSTR{...}..."
            - pattern: |
                "$SQLSTR".format(...)
        - metavariable-regex:
            metavariable: $SQLSTR
            regex: \s*(?i)(select|delete|insert|create|update|alter|drop)\b.*
              
- id: curl-eval
  severity: WARNING
  languages:
    - bash
  message: Eval of data from curl is dangerous - it may lead to an injection.
  mode: taint
  pattern-sources:
    - pattern: |
        $(curl ...)
    - pattern: |
        `curl ...`
  pattern-sinks:
    - pattern: eval ...

- id: curl-pipe-bash
  languages:
    - bash
  severity: WARNING
  message: Data is being piped into `bash` from a `curl` command which is dangerous and may lead to an injection.
  patterns:
    - pattern-either:
        - pattern: curl ... | /bin/bash ...
        - pattern: curl ... | bash ...
        - pattern: /bin/bash <(curl ...)
        - pattern: bash <(curl ...)
 

